import React from "react";
import axios from "axios";
import Head from "next/head";
import Image from "next/image";
import Link from "next/link";
import Header from "../components/Header";
import Landing from "../components/Landing";
import Footer from "../components/Footer";
import Menu from "../components/Menu";

import { useEffect, useState } from 'react';
import { GoogleOAuthProvider } from '@react-oauth/google';

import { client, urlFor } from "../utils/client";

const HomePage = ({ foods, bannerData, socialsData, discountsData }) => {
  // This is id for dynamic route, you
  // can change it to any value.
  const [isSSR, setIsSSR] = useState(true);

  useEffect(() => {
    setIsSSR(false);
  }, []);  

  if (isSSR) return null;
  return (
      <GoogleOAuthProvider clientId={`${process.env.NEXT_PUBLIC_GOOGLE_API_TOKEN}`}>
        <Head>
        <title>Millimag.</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
        <script src="https://unpkg.com/intasend-inlinejs-sdk@3.0.4/build/intasend-inline.js"></script>
        </Head>
       <Header />
        <Landing landingBanner={bannerData?.length && bannerData[0]} />
        <div className="px-2 items-center bg-white justify-center">
        <section className=" py-1 bg-blueGray-50">
          <div className="w-full lg:w-8/12 mx-auto mt-6">
           <div className="relative flex flex-col min-w-0 break-words w-full mb-6 shadow-lg rounded-lg bg-blueGray-100 border-0">
            <div className="rounded-t mb-0 px-6 py-6 bg-white">
             <div className="text-center flex justify-between">
              </div>
          
           <div className="container mx-auto py-9 md:py-12 px-4 md:px-6">
            <div className="flex items-strech justify-center flex-col md:flex-row space-y-4 md:space-y-0 md:space-x-6 lg:space-x-8">
              {discountsData?.map((discounts) => (  
                <div className="flex flex-col md:flex-row items-strech justify-between bg-gray-50 py-6 px-6 md:py-12 lg:px-12 md:w-8/12 lg:w-7/12 xl:w-8/12 2xl:w-9/12">
                    <div className="flex flex-col justify-center md:w-1/2">
                        <h1 className="text-3xl lg:text-4xl font-semibold text-gray-800">{discounts?.title}</h1>
                        <p className="text-base lg:text-xl text-gray-800 mt-2">
                            Save upto <span className="font-bold">{discounts?.percentage}</span>
                        </p>
                    </div>
                    <div className="md:w-1/2 mt-8 md:mt-0 flex justify-center md:justify-end">
                        <img 
                        src={urlFor(discounts?.image)}
                        alt="aboutimage" 
                        width={150}
                        height={150}
                        />
                    </div>
                </div>
                ))};
            </div>
           <hr className="my-6 border-gray-200 sm:mx-auto dark:border-black lg:my-8" />
           <h1 className="font-Poppins font-bold text-3xl text-center text-orange-500 tracking-wider mb-4">
             <u>Our food <span className="text-blue">Menu</span></u>
           </h1>
           <hr className="my-6 border-gray-200 sm:mx-auto dark:border-black lg:my-8" />
        </div>

          <div className="flex flex-col items-center my-4 md:my-8">
            {foods?.map((food) => (<Menu key={food._id} food={food} />  ))};
            </div>
            </div>
           </div>
         </div>
        </section>
       </div>
      {/*<Link href="/Reservations">
      <Reservations />
      </Link>} */
      <Footer socialsInfo={socialsData?.length && socialsData[0]} />
   }
    </GoogleOAuthProvider>
  );
};

export const getServerSideProps = async () => {
  const query = '*[_type == "food"]';
  const foods = await client.fetch(query);

  const bannerQuery = '*[_type == "banner"]';
  const bannerData = await client.fetch(bannerQuery);

  const socialsQuery = '*[_type == "socialmedia"]';
  const socialsData = await client.fetch(socialsQuery);

  const discountsQuery = '*[_type == "discounts"]';
  const discountsData = await client.fetch(discountsQuery);

  return {
    props: { foods, bannerData, socialsData, discountsData }
  }
}

export default HomePage;